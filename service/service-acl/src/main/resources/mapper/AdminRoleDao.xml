<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.dao.AdminRoleDao">

    <resultMap id="AdminRole" type="com.atguigu.entity.AdminRole">
        <result property="id" column="id"/>
        <result property="roleId" column="role_id"/>
        <result property="adminId" column="admin_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        id,role_id,admin_id,create_time,update_time,is_deleted
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into acl_admin_role (
            id ,
            role_id ,
            admin_id
        ) values (
                     #{id} ,
                     #{roleId} ,
                     #{adminId}
                 )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into acl_admin_role (
        role_id ,
        admin_id
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.roleId} ,
            #{item.adminId}
            )
        </foreach>
    </insert>

    <update id="update" >
        update acl_admin_role set
                                  role_id = #{roleId} ,
                                  admin_id = #{adminId}
        where
            id = #{id}
    </update>

    <update id="delete">
        update acl_admin_role set
            update_time = now() ,
            is_deleted = 1
        where
            id = #{id}
    </update>

    <select id="selectById" resultMap="AdminRole">
        select <include refid="columns" />
        from acl_admin_role
        where
        id = #{id}
    </select>
    
    <select id="findRoleIdListByAdminId" parameterType="long" resultType="long">
        select role_id
        from acl_admin_role
        where admin_id = #{adminId} and is_deleted = 0
    </select>
    
    <delete id="deleteAdminRoleRelationship">
        update acl_admin_role
        set update_time = now(),
            is_deleted = 1
        where
            admin_id = #{adminId}
    </delete>
    <!--<update id="deleteByAdminId">
        update acl_admin_role set
                                  update_time = now() ,
                                  is_deleted = 1
        where
            admin_id = #{adminId}
    </update>

    <select id="findRoleIdByAdminId" resultType="long">
        select
            role_id
        from acl_admin_role
        where
            admin_id = #{adminId}
          and is_deleted = 0
    </select>-->

</mapper>